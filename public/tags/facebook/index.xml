<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Facebook on BRYSGO</title>
    <link>http://brysgo.com/tags/facebook/</link>
    <description>Recent content in Facebook on BRYSGO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Jul 2015 12:59:33 +0000</lastBuildDate>
    
	<atom:link href="http://brysgo.com/tags/facebook/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Will Relay replace Flux?</title>
      <link>http://brysgo.com/2015/07/25/relay-vs-flux/</link>
      <pubDate>Sat, 25 Jul 2015 12:59:33 +0000</pubDate>
      
      <guid>http://brysgo.com/2015/07/25/relay-vs-flux/</guid>
      <description>Relay is out in preview! Have a look.
 When people talk about Relay they think of it as the server-client link in the Facebook stack, but is that really all it is?
Flux still has a place on the client because you need to manage temporary app state, right?
I think it doesn&amp;rsquo;t. Flux is an architecture for unidirectional data flow that separates out input from the user and the server so that it can react without getting tangled up.</description>
    </item>
    
    <item>
      <title>Why I&#39;m Excited for Facebook&#39;s Relay and GraphQL</title>
      <link>http://brysgo.com/2015/07/08/why-relay/</link>
      <pubDate>Wed, 08 Jul 2015 12:59:33 +0000</pubDate>
      
      <guid>http://brysgo.com/2015/07/08/why-relay/</guid>
      <description>Relay is out in preview! Have a look.
 I want to tell you in as few words as possible why I am so excited to get my hands on Relay and GraphQL.
React is widely popular because it is simple and declarative, making it very deterministic and easy to work with. React is also fully composable, making it imensly powerful with high potential for writing reusable code.</description>
    </item>
    
  </channel>
</rss>