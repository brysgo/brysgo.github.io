<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>flux on BRYSGO</title><link>//brysgo.com/tags/flux/</link><description>Recent content in flux on BRYSGO</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 25 Jul 2015 12:59:33 +0000</lastBuildDate><atom:link href="//brysgo.com/tags/flux/index.xml" rel="self" type="application/rss+xml"/><item><title>Will Relay replace Flux?</title><link>//brysgo.com/2015/07/25/relay-vs-flux/</link><pubDate>Sat, 25 Jul 2015 12:59:33 +0000</pubDate><guid>//brysgo.com/2015/07/25/relay-vs-flux/</guid><description>Relay is out in preview! Have a look.
When people talk about Relay they think of it as the server-client link in the Facebook stack, but is that really all it is?
Flux still has a place on the client because you need to manage temporary app state, right?
I think it doesn&amp;rsquo;t. Flux is an architecture for unidirectional data flow that separates out input from the user and the server so that it can react without getting tangled up.</description></item><item><title>Searching for an Isomorphic Reactiflux Stack</title><link>//brysgo.com/2015/06/17/isomorphic-react-flux-stack/</link><pubDate>Wed, 17 Jun 2015 10:07:43 +0000</pubDate><guid>//brysgo.com/2015/06/17/isomorphic-react-flux-stack/</guid><description>Now that Relay is out in preview, it will probably replace Flux entirely.
Why React? A few months ago, the release of React Native by Facebook convinced me to make the leap to React.
I spent a while working on a React Native app and quickly learned that I needed to bring in Flux. After watching a few videos and reading a few blogs, I added my own implementation of flux to my react native app.</description></item></channel></rss>