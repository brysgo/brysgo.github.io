<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>graphql on Personal website and blog</title><link>https://www.brysgo.com/tags/graphql/</link><description>Recent content in graphql on Personal website and blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Apr 2016 01:13:33 +0000</lastBuildDate><atom:link href="https://www.brysgo.com/tags/graphql/index.xml" rel="self" type="application/rss+xml"/><item><title>Imaginary Lines</title><link>https://www.brysgo.com/2016/04/01/imaginary-lines/</link><pubDate>Fri, 01 Apr 2016 01:13:33 +0000</pubDate><guid>https://www.brysgo.com/2016/04/01/imaginary-lines/</guid><description>If I had to sum up the job of a software engineer in laymen's terms, I would tell you that we draw imaginary lines around imaginary concepts until those concepts can map to both a specific set of instructions for a machine and a common understanding for programmers.
Why am I stating the obvious? Well, it is quite simply to emphasize just how important it is where we draw those lines.</description></item><item><title>GraphiQL Bookmarklet</title><link>https://www.brysgo.com/2015/12/19/graphiql-bookmarklet/</link><pubDate>Sat, 19 Dec 2015 13:41:33 +0000</pubDate><guid>https://www.brysgo.com/2015/12/19/graphiql-bookmarklet/</guid><description>I'm sure most of you, if you have done any work with graphql, have heard of graphiql. It is an indespensible tool for writing and testing graphql queries.
The problem is that now that I'm not using express at the moment. I don't want to go through the trouble of trying to fit graphiql into my stack.
To solve it, a graphiql bookmarklet: Enjoy!</description></item><item><title>Graphql + Bookshelf</title><link>https://www.brysgo.com/2015/08/13/graphql-bookshelf/</link><pubDate>Thu, 13 Aug 2015 00:09:33 +0000</pubDate><guid>https://www.brysgo.com/2015/08/13/graphql-bookshelf/</guid><description>I recently switched over the project I was working on from MongoDB to PostgreSQL. The reason for the switch is not what I'm writing to discuss, but I'll just say that the unpredictability of mongodb was starting to become an issue in development. The thought was that if it was already difficult before the data starts pouring in, it will probably be a nightmare one the product is in use. And that meant switching from graffiti-mongoose, to my own graphql database glue.</description></item><item><title>Why I'm Excited for Facebook's Relay and GraphQL</title><link>https://www.brysgo.com/2015/07/08/why-relay/</link><pubDate>Wed, 08 Jul 2015 12:59:33 +0000</pubDate><guid>https://www.brysgo.com/2015/07/08/why-relay/</guid><description>Relay is out in preview! Have a look.
I want to tell you in as few words as possible why I am so excited to get my hands on Relay and GraphQL.
React is widely popular because it is simple and declarative, making it very deterministic and easy to work with. React is also fully composable, making it imensly powerful with high potential for writing reusable code.
Relay is a mirror image of React, except instead of composing beautiful views for the web and native mobile devices using JSX, you can compose data from your database for your views using graphql.</description></item></channel></rss>