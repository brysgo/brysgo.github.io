<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>opinion on Personal website and blog</title><link>https://www.brysgo.com/tags/opinion/</link><description>Recent content in opinion on Personal website and blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 07 Dec 2017 02:00:28 +0000</lastBuildDate><atom:link href="https://www.brysgo.com/tags/opinion/index.xml" rel="self" type="application/rss+xml"/><item><title>The Dangers of Idiomatic Programming</title><link>https://www.brysgo.com/post/2017-12-07-idiom-shmidiom/</link><pubDate>Thu, 07 Dec 2017 02:00:28 +0000</pubDate><guid>https://www.brysgo.com/post/2017-12-07-idiom-shmidiom/</guid><description>What does it mean to be idiomatic?
&amp;ldquo;Of, relating to, or conforming to idiom&amp;rdquo; - Merriam-Webster
So what is an idiom?
&amp;ldquo;The syntactical, grammatical, or structural form peculiar to a language&amp;rdquo; - Merriam-Webster
When we talk about idiomatic programming, we are talking about doing things because it is &amp;ldquo;the way&amp;rdquo; to do them, or because so-and-so says this is a rule that canâ€™t be broken.
Why is it important to see past these idioms and understand why they are &amp;ldquo;the way?</description></item><item><title>The Job of an OS</title><link>https://www.brysgo.com/post/2017-11-06-job-of-os/</link><pubDate>Mon, 06 Nov 2017 14:10:28 +0000</pubDate><guid>https://www.brysgo.com/post/2017-11-06-job-of-os/</guid><description>It started with a gitter chat then a tweet, followed by a blog post.
&amp;hellip;
Well, I've had some time to digest my thoughts, and I think it is time for, a second blog post.
Whenever I think something needs redefining, the first thing I like to do is look for a definition (shocking right?). The Merriam-Webster dictionary defines and Operating System as:
Software that controls the operation of a computer and directs the processing of programs (as by assigning storage space in memory and controlling input and output functions)</description></item><item><title>Why are operating systems still multi-user?</title><link>https://www.brysgo.com/post/2017-11-05-multi-user-systems/</link><pubDate>Sun, 05 Nov 2017 14:10:28 +0000</pubDate><guid>https://www.brysgo.com/post/2017-11-05-multi-user-systems/</guid><description>So I'm minding my own business, setting up Arch linux in my unrooted Termux installation on my phone, when all of a sudden, makepkg wants me to not be root to run a build. Excuse me? What century are we in?
Let me clarify, when I am running linux in a container to build applications the operating system should not be bothering me with arbitrary user systems.
When was the last time you logged into a multi-user unix system that had other users on it?</description></item></channel></rss>