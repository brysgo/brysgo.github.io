<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rails on BRYSGO</title><link>http://brysgo.com/tags/rails/</link><description>Recent content in rails on BRYSGO</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Apr 2016 01:13:33 +0000</lastBuildDate><atom:link href="http://brysgo.com/tags/rails/index.xml" rel="self" type="application/rss+xml"/><item><title>Imaginary Lines</title><link>http://brysgo.com/2016/04/01/imaginary-lines/</link><pubDate>Fri, 01 Apr 2016 01:13:33 +0000</pubDate><guid>http://brysgo.com/2016/04/01/imaginary-lines/</guid><description>If I had to sum up the job of a software engineer in laymen's terms, I would tell you that we draw imaginary lines around imaginary concepts until those concepts can map to both a specific set of instructions for a machine and a common understanding for programmers.
Why am I stating the obvious? Well, it is quite simply to emphasize just how important it is where we draw those lines.</description></item><item><title>Voltrb first impressions</title><link>http://brysgo.com/2014/12/04/voltrb-first-impressions/</link><pubDate>Thu, 04 Dec 2014 23:27:00 +0000</pubDate><guid>http://brysgo.com/2014/12/04/voltrb-first-impressions/</guid><description>
&lt;p>What do you get when you cross meteorjs with rails?&lt;/p>
&lt;p>The answer is quite simply, voltrb.&lt;/p>
&lt;p>Getting started is not quite as easy as meteor or rails, which isn’t surprising considering how fresh it is.&lt;/p>
&lt;p>So far I built a search box that creates new items on submit, but searches through existing items as you type. I’m building the site that will go here: &lt;a href="http://www.procedur.al">http://www.procedur.al&lt;/a>.&lt;/p>
&lt;p>I love how you get default models and collections for each storage method and you can optionally create models that are autoloaded if they exist. This reminds me if ember, only I don’t have to leave ruby!</description></item><item><title>Ink/filepicker-rails doesn't preview my unsupported image format</title><link>http://brysgo.com/2014/11/13/ink-filepicker-rails-doesnt-preview-my/</link><pubDate>Thu, 13 Nov 2014 19:30:18 +0000</pubDate><guid>http://brysgo.com/2014/11/13/ink-filepicker-rails-doesnt-preview-my/</guid><description>First, before you go any further&amp;hellip; check to make sure the image you&amp;rsquo;re trying isn&amp;rsquo;t just broken.
I visited the image in the browser and realized that the browser supported the format, so the broken preview had to be somewhere in filepicker.
In my case I was using a(n) .ico file and since filepicker.io only supports post processing on .jpg and .png I had to come up with a work around.</description></item></channel></rss>