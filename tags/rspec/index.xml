<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rspec on Personal website and blog</title><link>https://www.brysgo.com/tags/rspec/</link><description>Recent content in rspec on Personal website and blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 31 Dec 2014 15:17:00 +0000</lastBuildDate><atom:link href="https://www.brysgo.com/tags/rspec/index.xml" rel="self" type="application/rss+xml"/><item><title>Linearly dependant Rspec 'behavior'</title><link>https://www.brysgo.com/2014/12/31/linearly-dependant-rspec-behavior/</link><pubDate>Wed, 31 Dec 2014 15:17:00 +0000</pubDate><guid>https://www.brysgo.com/2014/12/31/linearly-dependant-rspec-behavior/</guid><description>
&lt;p>&lt;strong>The problem:&lt;/strong> You finish writing your test in rspec, and after you have carefully described the scenario, you go to write your next test. For your next test you need to check that after you do everything for the first test, the next thing doesn’t break.&lt;/p>
&lt;p>&lt;strong>Potential hacks:&lt;/strong>&lt;/p>
&lt;p>a) Well, it is just this one time, I can ignore the description of the spec and just throw in another assertion after my test.&lt;/p>
&lt;p>While you’re at it, why don’t you just do everything in one test, I’m sure you’ll be able to figure it out when it fails.&lt;/p>
&lt;p>b) There isn’t that much setup, I can just do the same thing I did in the last test as setup!&lt;/p>
&lt;p>Lets pretend we don’t care about performance, I hope we can guarantee that the first test won’t change and that the setup state of the second test won’t get out of touch with reality!&lt;/p>
&lt;p>&lt;strong>But wait, there’s another solutions…&lt;/strong>&lt;/p>
&lt;p></description></item></channel></rss>